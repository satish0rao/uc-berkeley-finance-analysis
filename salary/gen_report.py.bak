import pandas as pd

def get_positions(a, place = 'UC Berkeley', contains = '', without = 'profl'):
    return a[(a['Department / Subdivision'] == place) & (a['Position'].notnull()) & a['Position'].str.lower().str.contains(contains) & ( ~a['Position'].str.lower().str.contains(without))]

def old_get_positions(a,place,title="",without='XXXXX', pay_lb = 0.0):
    return a[(a['campus'] == place)  &
             a['gross'].notnull() &
             (a['gross'] > pay_lb) &
             a['title'].str.lower().str.contains(title) &
             ~a['title'].str.lower().str.contains(without)]


def excluder(a,exclude_list=[],column_name='Position'):
    for x in xrange(0,len(exclude_list)):
        a = a[~a[column_name].str.lower().str.contains(exclude_list[x])]
    return a

def old_excluder(a,exclude_list=[],column_name='Position'):
    excluder(a,exclude_list,column_name='title')

def basic_report_pay(a,title_name='',match_list=[],exclude_list=[],place='UC - Berkeley',old=False):
    if old:
        getter = old_get_positions
        excluding = old_excluder
    else:
        getter = get_positions
        excluding = excluder

    got_this = getter(a,place,match_list[0])
    for i in xrange(1,len(match_list)):
        got_this = pd.concat(got_this,
                             getter(a,place,match_list[i]))

    got_this = excluding(got_this,exclude_list)

    print "%s Position titles: most common\n" % title_name, profs2011['title'].value_counts().head()
    #print "Professor Position titles: lease common\n", profs2011['title'].value_counts().tail()
    print "Professor Count: ", profs2011['title'].count()
    print "Professor Gross Pay: ", profs2011['gross'].sum()
    return profs2011['gross'].sum()



a2011 = pd.read_csv("data/ucpay2011.csv",sep='\t')

profs2011_pre = old_get_positions(a2011,'BERKELEY','prof','professional')
profs2011 = old_get_positions(profs2011_pre,'BERKELEY','prof','prof\'l')

basic_report_pay(a2011,title_name='Professors', match_list=['prof'], exclude_list=['prof\'l','professional'],place='BERKELEY', old=True)

lect2011 = old_get_positions(a2011,'BERKELEY','lect','intellectual')
lect2011 = old_get_positions(lect2011,'BERKELEY','lect','elect')
lect2011 = old_get_positions(lect2011,'BERKELEY','lect','collect')

print "**************"
print "***BERKELEY 2011***"
print "**************"
print "Professor Position titles: most common\n", profs2011['title'].value_counts().head()
#print "Professor Position titles: lease common\n", profs2011['title'].value_counts().tail()
print "Professor Count: ", profs2011['title'].count()
print "Professor Gross Pay: ", profs2011['gross'].sum()
print
print "Lecturer Position titles:\n", lect2011['title'].value_counts()
print "Lecturer: ", lect2011['title'].count()
print "Lecturer Gross Pay: ", lect2011['gross'].sum()


print "**************"
print "***BERKELEY 2015***"
print "**************"

a2015 = pd.read_csv("data/2015_UniversityOfCalifornia.csv")

profs2015 = get_positions(a2015,'UC - Berkeley','prof','profl')
print "Professor Position titles: most common\n", profs2015['Position'].value_counts().head()
#print "Professor Position titles: lease common\n", profs2015['Position'].value_counts().tail()
print "Professor Count: ", profs2015['Position'].count()
print "Professor Gross Pay: ", profs2015['Total Wages'].sum()

teaching = profs2015['Total Wages'].sum()

lect2015 = get_positions(a2015,'UC - Berkeley','lect','ellect')
lect2015 = get_positions(lect2015,'UC - Berkeley','lect','elect')
lect2015 = get_positions(lect2015,'UC - Berkeley','lect','collect')
print
print "Lecturer Position titles:\n", lect2015['Position'].value_counts()
print "Lecturer: ", lect2015['Position'].count()
print "Lecturer Gross Pay: ", lect2015['Total Wages'].sum()
print

teaching += lect2015['Total Wages'].sum()

teach2015 = get_positions(a2015,'UC - Berkeley', 'teachg')
print
print "Teaching Assistant titles:\n", teach2015['Position'].value_counts()
print "Teaching Assistant: ", teach2015['Position'].count()
print "Teaching Gross Pay: ", teach2015['Total Wages'].sum()
print

teaching += teach2015['Total Wages'].sum()

teach2015 = get_positions(a2015,'UC - Berkeley', 'teacher')
print
print "Other Teacher titles:\n", teach2015['Position'].value_counts()
print "Other Teacher title: ", teach2015['Position'].count()
print "Other Teacher Gross Pay: ", teach2015['Total Wages'].sum()
print

teaching += teach2015['Total Wages'].sum()

gsr2015 = get_positions(a2015,'UC - Berkeley', 'gsr')
print
print "GSR titles:\n", gsr2015['Position'].value_counts()
print "GSR: ", gsr2015['Position'].count()
print "GSR Gross Pay: ", gsr2015['Total Wages'].sum()
print

research = gsr2015['Total Wages'].sum()

postdoc2015 = get_positions(a2015,'UC - Berkeley', 'postdoc')
print
print "Postdoc titles:\n", postdoc2015['Position'].value_counts()
print "Postdoc: ", postdoc2015['Position'].count()
print "Postdoc Gross Pay: ", postdoc2015['Total Wages'].sum()
print

research += postdoc2015['Total Wages'].sum()

res2015 = get_positions(a2015,'UC - Berkeley', 'res')
res2015 = get_positions(res2015,'UC - Berkeley', 'res','prof')
res2015 = get_positions(res2015,'UC - Berkeley', 'res','survey')
res2015 = get_positions(res2015,'UC - Berkeley', 'res','computer')
res2015 = get_positions(res2015,'UC - Berkeley', 'res','stores')

print
print "Research titles:\n", res2015['Position'].value_counts()
print "Research titles: ", res2015['Position'].count()
print "Reserach  Gross Pay: ", res2015['Total Wages'].sum()
print

research += res2015['Total Wages'].sum()

scientist2015 = get_positions(a2015,'UC - Berkeley', 'scientist')
print
print "Scientist titles:\n", scientist2015['Position'].value_counts()
print "Scientist: ", scientist2015['Position'].count()
print "Scientist Gross Pay: ", scientist2015['Total Wages'].sum()
print

research += scientist2015['Total Wages'].sum()

print "Teachers    : ", teaching
print "Researchers : ", research
print "Total Wages : ", a2015[a2015['Department / Subdivision'] == 'UC - Berkeley']['Total Wages'].sum()


